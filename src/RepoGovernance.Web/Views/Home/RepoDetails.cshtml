@using RepoGovernance.Web.Models
@model RepoDetails
@{
    ViewData["Title"] = $"Repo Details - {Model.Owner}/{Model.Repository}";
}

<div>
    <div class="row">
        <div class="col-md-10">
            <h4>Repository Details - @Model.Owner/@Model.Repository</h4>
            <p>Manage recommendations and tasks for this specific repository.</p>
            <div style="font-size:14px;">
                <a href="@Url.Action("TaskList", "Home", new { isContributor = Model.IsContributor })" style="font-size:12px">‚Üê Back to task list</a> &nbsp;
                <a href="https://github.com/@Model.Owner/@Model.Repository" target="_blank" style="font-size:12px">
                    <i class="bi bi-github"></i> View on GitHub
                </a> &nbsp;
                <span class="badge bg-info">Total recommendations: @Model.TotalRecommendations</span> &nbsp;
                <span class="badge bg-success">Active: @Model.ActiveRecommendations</span> &nbsp;
                <span class="badge bg-secondary">Ignored: @Model.IgnoredCount</span>
            </div>
        </div>
    </div>

    @if (Model.ActiveRecommendations == 0 && Model.IgnoredCount == 0)
    {
        <div class="alert alert-success mt-3" role="alert">
            <h4 class="alert-heading">No Recommendations!</h4>
            <p>This repository is following best practices and has no outstanding recommendations.</p>
            <hr>
            @if (Model.IsContributor)
            {
                <p class="mb-0">You can return to the <a href="@Url.Action("TaskList", "Home", new { isContributor = Model.IsContributor })" class="alert-link">task list</a> to see other repositories.</p>
            }
            else
            {
                <p class="mb-0">You can return to the <a href="@Url.Action("TaskList", "Home")" class="alert-link">task list</a> to see other repositories.</p>
            }
        </div>
    }
    else
    {
        @if (Model.ActiveRecommendations > 0)
        {
            <div class="mt-4">
                <h5><i class="bi bi-exclamation-triangle-fill text-warning"></i> Active Recommendations (@Model.ActiveRecommendations)</h5>
                <p class="text-muted">Click the checkbox to ignore a recommendation if it doesn't apply to your repository.</p>
                
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col" style="width: 60px;">Ignore</th>
                                <th scope="col">Category</th>
                                <th scope="col">Recommendation</th>
                                <th scope="col">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (TaskItem task in Model.Recommendations)
                            {
                                <tr id="active-@task.Id.Replace("|", "_")">
                                    <td>
                                        <input type="checkbox" 
                                               class="form-check-input ignore-checkbox" 
                                               data-owner="@task.Owner"
                                               data-repository="@task.Repository"
                                               data-type="@task.RecommendationType"
                                               data-details="@task.RecommendationDetails"
                                               title="Ignore this recommendation"
                                               aria-label="Ignore recommendation: @task.RecommendationDetails" />
                                    </td>
                                    <td>
                                        @{
                                            string badgeClass = task.RecommendationType switch
                                            {
                                                "Repository Settings" => "bg-primary",
                                                "Branch Policies" => "bg-warning text-dark",
                                                "GitHub Actions" => "bg-success",
                                                "Dependabot" => "bg-info",
                                                "Git Version" => "bg-secondary",
                                                ".NET Frameworks" => "bg-dark",
                                                "NuGet Packages" => "bg-warning text-dark",
                                                "Security" => "bg-danger",
                                                _ => "bg-light text-dark"
                                            };
                                        }
                                        <span class="badge @badgeClass">@task.RecommendationType</span>
                                    </td>
                                    <td>@task.RecommendationDetails</td>
                                    <td>
                                        <a href="https://github.com/@task.Owner/@task.Repository" 
                                           target="_blank" 
                                           class="btn btn-sm btn-outline-primary"
                                           title="View repository on GitHub">
                                            <i class="bi bi-github"></i> View Repo
                                        </a>
                                        @if (Model.IsContributor)
                                        {
                                            <a href="@Url.Action("UpdateRow", "Home", new { user = "samsmithnz", owner = task.Owner, repo = task.Repository, isContributor = Model.IsContributor })" 
                                               class="btn btn-sm btn-outline-secondary ms-1"
                                               title="Update metrics for this repository">
                                                <i class="bi bi-arrow-clockwise"></i> Update
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

        @if (Model.IgnoredCount > 0)
        {
            <div class="mt-4">
                <h5><i class="bi bi-eye-slash text-muted"></i> Ignored Recommendations (@Model.IgnoredCount)</h5>
                <p class="text-muted">These recommendations have been ignored. You can restore them by unchecking the checkbox.</p>
                
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" style="width: 60px;">Restore</th>
                                <th scope="col">Category</th>
                                <th scope="col">Recommendation</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (TaskItem task in Model.IgnoredRecommendations)
                            {
                                <tr id="ignored-@task.Id.Replace("|", "_")" class="text-muted">
                                    <td>
                                        <input type="checkbox" 
                                               class="form-check-input unignore-checkbox" 
                                               data-owner="@task.Owner"
                                               data-repository="@task.Repository"
                                               data-type="@task.RecommendationType"
                                               data-details="@task.RecommendationDetails"
                                               title="Restore this recommendation"
                                               aria-label="Restore recommendation: @task.RecommendationDetails" />
                                    </td>
                                    <td>
                                        @{
                                            string badgeClass = task.RecommendationType switch
                                            {
                                                "Repository Settings" => "bg-light text-dark",
                                                "Branch Policies" => "bg-light text-dark", 
                                                "GitHub Actions" => "bg-light text-dark",
                                                "Dependabot" => "bg-light text-dark",
                                                "Git Version" => "bg-light text-dark",
                                                ".NET Frameworks" => "bg-light text-dark",
                                                "NuGet Packages" => "bg-light text-dark",
                                                "Security" => "bg-light text-dark",
                                                _ => "bg-light text-dark"
                                            };
                                        }
                                        <span class="badge @badgeClass">@task.RecommendationType</span>
                                    </td>
                                    <td>@task.RecommendationDetails</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle ignore checkbox changes
            $('.ignore-checkbox').change(function() {
                const checkbox = $(this);
                const isChecked = checkbox.is(':checked');
                
                if (isChecked) {
                    const owner = checkbox.data('owner');
                    const repository = checkbox.data('repository');
                    const type = checkbox.data('type');
                    const details = checkbox.data('details');
                    
                    // Disable checkbox while processing
                    checkbox.prop('disabled', true);
                    
                    $.ajax({
                        url: '@Url.Action("IgnoreRecommendation", "Home")',
                        type: 'POST',
                        data: {
                            owner: owner,
                            repository: repository,
                            recommendationType: type,
                            recommendationDetails: details
                        },
                        success: function(response) {
                            if (response.success) {
                                // Reload page to reflect changes
                                location.reload();
                            } else {
                                alert('Failed to ignore recommendation. Please try again.');
                                checkbox.prop('checked', false);
                            }
                        },
                        error: function() {
                            alert('An error occurred. Please try again.');
                            checkbox.prop('checked', false);
                        },
                        complete: function() {
                            checkbox.prop('disabled', false);
                        }
                    });
                }
            });
            
            // Handle unignore checkbox changes
            $('.unignore-checkbox').change(function() {
                const checkbox = $(this);
                const isChecked = checkbox.is(':checked');
                
                if (isChecked) {
                    const owner = checkbox.data('owner');
                    const repository = checkbox.data('repository');
                    const type = checkbox.data('type');
                    const details = checkbox.data('details');
                    
                    // Disable checkbox while processing
                    checkbox.prop('disabled', true);
                    
                    $.ajax({
                        url: '@Url.Action("UnignoreRecommendation", "Home")',
                        type: 'POST',
                        data: {
                            owner: owner,
                            repository: repository,
                            recommendationType: type,
                            recommendationDetails: details
                        },
                        success: function(response) {
                            if (response.success) {
                                // Reload page to reflect changes
                                location.reload();
                            } else {
                                alert('Failed to restore recommendation. Please try again.');
                                checkbox.prop('checked', false);
                            }
                        },
                        error: function() {
                            alert('An error occurred. Please try again.');
                            checkbox.prop('checked', false);
                        },
                        complete: function() {
                            checkbox.prop('disabled', false);
                        }
                    });
                }
            });
        });
    </script>
}