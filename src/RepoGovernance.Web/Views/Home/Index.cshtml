@using RepoGovernance.Core.Models
@model List<SummaryItem>
@{
    ViewData["Title"] = "Home Page";
}

@{
    string lastUpdated = "unknown";
    if (Model.Count > 0)
    {
        lastUpdated = Model[0].LastUpdated.ToString("d-MMM-yyyy h:mmtt");
    }
}

<div>
    <h4>For account https://github.com/samsmithnz (last updated @lastUpdated)</h4>
    <div>
        <table class="table">
            <tr>
                <th>Repository</th>
                <th>Repo settings</th>
                <th>Actions</th>
                <th>Dependabot</th>
                <th>Branch policies</th>
                <th>Auto versioning</th>
                <th>Frameworks detected</th>
            </tr>
            @foreach (SummaryItem item in Model)
            {
                <tr>
                    <td>
                        <a href="https://github.com/samsmithnz/@item.Repo">@item.Repo</a>
                        @if (item.RepoSettings.visibility == "private")
                        {
                            <span>(private)</span>
                        }
                    </td>
                    @if (item.RepoSettingsRecommendations.Count == 0)
                    {
                        <td>
                            <span>Ok</span>
                            @*<i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;"></i>*@
                        </td>
                    }
                    else
                    {
                        string recommendation = "";
                        foreach (string itemRec in item.RepoSettingsRecommendations)
                        {
                            recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                        }
                        <td>
                            <b>Incomplete</b>
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" title="@recommendation"></i>
                        </td>
                    }
                    @if (item.Actions.Count > 0 && item.ActionRecommendations.Count == 0)
                    {
                        <td>@item.Actions.Count workflows</td>
                    }
                    else
                    {
                        string recommendation = "";
                        foreach (string itemRec in item.ActionRecommendations)
                        {
                            recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                        }
                        <td>
                            <b>Incomplete</b>
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" title="@recommendation"></i>
                        </td>
                    }
                    @if (item.Dependabot.Count > 0 && item.DependabotRecommendations.Count == 0)
                    {
                        <td>Enabled</td>
                    }
                    else
                    {
                        string recommendation = "";
                        foreach (string itemRec in item.DependabotRecommendations)
                        {
                            recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                        }
                        <td>
                            <b>Incomplete</b>
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" title="@recommendation"></i>
                        </td>
                    }
                    @if (item.BranchPolicies != null && item.BranchPoliciesRecommendations.Count == 0)
                    {
                        <td>Enabled</td>
                    }
                    else
                    {
                        string recommendation = "";
                        foreach (string itemRec in item.BranchPoliciesRecommendations)
                        {
                            recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                        }
                        <td>
                            <b>Incomplete</b>
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" title="@recommendation"></i>
                        </td>
                    }
                    @if (item.GitVersion.Count > 0 && item.GitVersionRecommendations.Count == 0)
                    {
                        <td>Enabled</td>
                    }
                    else
                    {
                        string recommendation = "";
                        foreach (string itemRec in item.GitVersionRecommendations)
                        {
                            recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                        }
                        <td>
                            <b>Incomplete</b>
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" title="@recommendation"></i>
                        </td>
                    }
                    <td>
                        @if (item.DotNetFrameworks.Count == 0)
                        {
                            <span class="badge bg-secondary">None found</span>
                        }
                        else
                        {
                            foreach (string badge in item.DotNetFrameworks)
                            {
                                <span class="badge bg-primary">@badge</span>
                            }
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>
