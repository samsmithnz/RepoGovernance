@using RepoGovernance.Core.Models
@model List<SummaryItem>
@{
    ViewData["Title"] = "Home Page";

    string lastUpdated = "[unknown]";
    string owner = "[unknown]";
    TimeZoneInfo easternZone = TimeZoneInfo.FindSystemTimeZoneById("America/New_York");
    if (Model.Count > 0)
    {
        @foreach (SummaryItem item in Model)
        {
            item.LastUpdated = DateTime.SpecifyKind(item.LastUpdated, DateTimeKind.Utc);
        }
        lastUpdated = TimeZoneInfo.ConvertTimeFromUtc(Model[0].LastUpdated, easternZone).ToString("dd-MMM-yyyy h:mm:sstt");
        owner = "samsmithnz";// Model[0].Owner;
    }
}

<div>
    <h4>For account <code>@owner</code> (last updated @lastUpdated)</h4>
    <b>Legend</b>: <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Feature is ok!"></i>=Feature is Ok
    <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Feature needs improvement"></i>=Feature needs improvement

    <div>
        <div class="row">
            <div class="col-md-4">
                <span><b>Repository</b></span>
            </div>
            <div class="col-md-1">
                <span><b>Repo settings</b></span>
            </div>
            <div class="col-md-1">
                <span><b>Actions</b></span>
            </div>
            <div class="col-md-1">
                <span><b>Dependabot</b></span>
            </div>
            <div class="col-md-1">
                <span><b>Branch policies</b></span>
            </div>
            <div class="col-md-1">
                <span><b>Auto versioning</b></span>
            </div>
            <div class="col-md-3">
                <span><b>Frameworks detected</b></span>
            </div>
        </div>
        @foreach (SummaryItem item in Model)
        {
            <div class="row">
                <div class="col-md-12">
                    <hr>
                </div>
                <div class="col-md-4">
                    <div>
                        <a href="https://github.com/samsmithnz/@item.Repo">@item.Repo</a>
                        <i class="bi bi-clock" data-toggle="tooltip" data-placement="bottom" title="Last updated @item.LastUpdated.ToString("dd-MMM-yyyy h:mm:sstt")"></i>
                        @if (item.RepoSettings.visibility == "private")
                        {
                            <i class="bi bi-file-lock-fill" style="color: black; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Private repo"></i>
                        }
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        @if (item.RepoSettingsRecommendations.Count == 0)
                        {
                            <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="OK"></i>
                        }
                        else
                        {
                            string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                            foreach (string itemRec in item.RepoSettingsRecommendations)
                            {
                                recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                            }
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i>
                        }
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        @if (item.Actions.Count > 0 && item.ActionRecommendations.Count == 0)
                        {
                            <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@item.Actions.Count workflows"></i>
                        }
                        else
                        {
                            string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                            foreach (string itemRec in item.ActionRecommendations)
                            {
                                recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                            }
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i>
                        }
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        @if (item.Dependabot.Count > 0 && item.DependabotRecommendations.Count == 0)
                        {
                            <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Enabled"></i>
                        }
                        else
                        {
                            string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                            foreach (string itemRec in item.DependabotRecommendations)
                            {
                                recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                            }
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i>
                        }
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        @if (item.BranchPolicies != null && item.BranchPoliciesRecommendations.Count == 0)
                        {
                            <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Enabled"></i>
                        }
                        else
                        {
                            string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                            foreach (string itemRec in item.BranchPoliciesRecommendations)
                            {
                                recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                            }
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i>
                        }
                    </div>
                </div>
                <div class="col-md-1">
                    <div>
                        @if (item.GitVersion.Count > 0 && item.GitVersionRecommendations.Count == 0)
                        {
                            <i class="bi bi-heart-fill" style="color: green; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="Enabled"></i>
                        }
                        else
                        {
                            string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                            foreach (string itemRec in item.GitVersionRecommendations)
                            {
                                recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                            }
                            <i class="bi bi-heart-pulse" style="color: red; height: 16px; width: 16px;" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i>
                        }
                    </div>
                </div>
                <div class="col-md-3">
                    <div>
                        @if (item.DotNetFrameworks.Count == 0)
                        {
                            <span class="badge bg-secondary">None found</span>
                        }
                        else
                        {
                            foreach (Framework framework in item.DotNetFrameworks)
                            {
                                <span class="badge @framework.Color">@framework.Name</span>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>

</div>
