@using RepoAutomation.Core.Models
@using RepoGovernance.Core.Models
@using System.Text.Json;
@model SummaryItemsIndex
@{
    ViewData["Title"] = "Home Page";

    TimeSpan ts = new();
    string lastUpdated = "[unknown]";
    string user = "[unknown]";
    if (Model.SummaryItems.Count > 0)
    {
        DateTime minDate = DateTime.Now;
        DateTime maxDate = DateTime.Now;
        @foreach (SummaryItem item in Model.SummaryItems)
        {
            if (minDate > item.LastUpdated)
            {
                minDate = item.LastUpdated;
            }
            if (maxDate < item.LastUpdated)
            {
                maxDate = item.LastUpdated;
            }
        }
        ts = maxDate - minDate;
        lastUpdated = maxDate.ToString("dd-MMM-yyyy h:mm:sstt");
        user = Model.SummaryItems[0].User;
    }
}

<div>
    <div class="row">
        <div class="col-md-6">
            <h4>For user <code>@user</code>@* (last updated at @lastUpdated)*@</h4>
            <b>Legend</b>: <i class="bi bi-heart-fill greenHeart" data-toggle="tooltip" data-placement="bottom" title="No recommendations"></i>=Repo is OK, no recommendations
            <i class="bi bi-heart-pulse redHeart" data-toggle="tooltip" data-placement="bottom" title="Recommendations for improvement"></i>=Recommendations for improvement
            <br />
            <div style="font-size:14px;">
                <a href="https://github.com/samsmithnz/RepoGovernance" target="_blank" style="font-size:12px">This project source code</a> &nbsp;
                <span class="badge bg-primary">Total repos: @Model.SummaryItems.Count</span> &nbsp;
                <span class="badge bg-primary">Total PRs: @Model.SummaryItems.Sum(x => x.PullRequests.Count)</span> &nbsp;
                <span class="badge bg-primary">Total issues: @Model.SummaryItems.Sum(x => x.TotalRecommendationCount)</span>
            </div>
            <br />
        </div>
        <div class="col-md-6">
            <h4>&nbsp;</h4>
            <div style="font-size:14px;">
                <strong>Top 5 languages detected:</strong><br />
                @if (Model.SummaryRepoLanguages != null && Model.SummaryRepoLanguages.Count > 0)
                {
                    for (int i = 0; (Model.SummaryRepoLanguages.Count < 5 && i < Model.SummaryRepoLanguages.Count) || i < 5; i++)
                    {
                        RepoLanguage item = Model.SummaryRepoLanguages[i];
                        <span class="box" style="background-color: @item.Color;">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                        <span>@item.Name: @item.Percent.ToString("0.0")%</span>
                    }
                }
            </div>
            <br />
        </div>
    </div>
    <div>
        @foreach (SummaryItem item in Model.SummaryItems)
        {
            string visibility = item.RepoSettings.visibility switch
            {
                null => throw new ArgumentNullException(nameof(item.RepoSettings.visibility)),
                "" => throw new ArgumentException($"{nameof(item.RepoSettings.visibility)} cannot be empty", nameof(item.RepoSettings.visibility)),
                _ => string.Concat(item.RepoSettings.visibility[0].ToString().ToUpper(), item.RepoSettings.visibility.AsSpan(1))
            };
            <div class="row rowStyle">
                <div class="col-md-5">
                    <div>
                        <a id="@item.Repo"></a>
                        <a href="https://github.com/@item.Owner/@item.Repo" target="_blank" class="projectHeader">@item.Repo</a> <span class="publicPrivateLabel">&nbsp;&nbsp;@visibility&nbsp;&nbsp;</span><br>
                        <span class="descriptionText">@item.RepoSettings.description</span><br>
                    </div>
                    <div>
                        @if (item.TotalRecommendationCount >= 0)
                        {
                            @if (item.RepoSettingsRecommendations.Count == 0 &&
                           item.BranchPolicies != null && item.BranchPoliciesRecommendations.Count == 0 &&
                           item.Actions.Count > 0 && item.ActionRecommendations.Count == 0 &&
                           item.Dependabot.Count > 0 && item.DependabotRecommendations.Count == 0 &&
                           item.GitVersion.Count > 0 && item.GitVersionRecommendations.Count == 0)
                            {
                                <i class="bi bi-heart-fill greenHeart" data-toggle="tooltip" data-placement="bottom" title="OK"></i> <span>0</span>
                            }
                            else
                            {
                                string recommendation = "Incomplete" + Environment.NewLine + Environment.NewLine;
                                foreach (string itemRec in item.RepoSettingsRecommendations)
                                {
                                    recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                                }
                                foreach (string itemRec in item.BranchPoliciesRecommendations)
                                {
                                    recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                                }
                                foreach (string itemRec in item.ActionRecommendations)
                                {
                                    recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                                }
                                foreach (string itemRec in item.DependabotRecommendations)
                                {
                                    recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                                }
                                foreach (string itemRec in item.GitVersionRecommendations)
                                {
                                    recommendation += " - " + itemRec + Environment.NewLine + Environment.NewLine;
                                }
                                <i class="bi bi-heart-pulse redHeart" data-toggle="tooltip" data-placement="bottom" title="@recommendation"></i> <span style="font-size: 14px;">@item.TotalRecommendationCount</span>
                            }
                        }
                        &nbsp;&nbsp;
                        <span class="iconify" data-icon="octicon:git-pull-request-16"></span> <a href="https://github.com/@item.Owner/@item.Repo/pulls" target="_blank" title="View all PRs" style="font-size: 14px;">@item.PullRequests.Count</a>

                        @if (item.Release != null || item.CoverallsCodeCoverage != null)
                        {
                            <br />
                            @if (item.Release != null)
                            {
                                <a href="@item.Release.html_url" target="_blank"><img src="https://img.shields.io/static/v1?label=Latest%20release&logo=github&message=@item.Release.name%20@(item.Release.ToTimingString())&color=blue" alt="Release badge"></a>
                            }
                            @if (item.CoverallsCodeCoverage != null)
                            {
                                string codeCoverageColor = "yellow";
                                if (item.CoverallsCodeCoverage.covered_percent < 50)
                                {
                                    codeCoverageColor = "red";
                                }
                                else if (item.CoverallsCodeCoverage.covered_percent >= 80)
                                {
                                    codeCoverageColor = "brightgreen";
                                }
                                <a href="https://coveralls.io/github/@(item.OwnerRepo)/@(item.Repo)" target="_blank"><img src="https://img.shields.io/static/v1?label=Code%20coverage&logo=coveralls&message=@item.CoverallsCodeCoverage.covered_percent.ToString("0")%&color=@codeCoverageColor" alt="Coveralls code coverage badge"></a>
                            }
                            @if (item.SonarCloud != null)
                            {
                                if (item.SonarCloud.CodeSmellsBadgeImage != null)
                                {
                                    <a href="@item.SonarCloud.CodeSmellsLink" target="_blank">@Html.Raw(item.SonarCloud.CodeSmellsBadgeImage)</a>
                                }
                                if (item.SonarCloud.BugsBadgeImage != null)
                                {
                                    <a href="@item.SonarCloud.BugsLink" target="_blank">@Html.Raw(item.SonarCloud.BugsBadgeImage)</a>
                                }
                            }
                        }
                        <br>
                        @if (item.RepoLanguages.Count > 0)
                        {
                            <div class="descriptionText" style="font-size:12px; margin-top: 10px;">
                                <span><b>Repo languages: </b></span>
                                @*                               @if (item.RepoLanguagesLastUpdated != null)
                        {
                        DateTime repoLanguagesDateTime = (DateTime)item.RepoLanguagesLastUpdated;
                        <i class="bi bi-info-circle" title='Repo langauges last updated on @repoLanguagesDateTime.ToString("d-MMM-yyyy hh:mm:sstt")'></i>
                        }*@
                                @foreach (RepoLanguage language in item.RepoLanguages)
                                {
                                    if (language.Percent > 0.001M)
                                    {
                                        <span class="box" style="background-color: @language.Color;">&nbsp;&nbsp;&nbsp;&nbsp;</span>
                                        <span>@language.Name: @language.Percent.ToString("0.0")%</span>
                                    }
                                }
                            </div>
                        }
                        <span class="lastUpdatedText">Last updated: </span>
                        @if (item.LastUpdated > DateTime.Now.AddDays(-7))
                        {
                            <span class="lastUpdatedText">@item.LastUpdated.ToString("dd-MMM-yyyy HH:mmtt")</span>
                        }
                        else
                        {
                            <span class="lastUpdatedRedText">@item.LastUpdated.ToString("dd-MMM-yyyy HH:mmtt")</span>
                        }
                        @if (item.LastUpdatedMessage != null)
                        {
                            <span><i class="bi bi-exclamation-circle lastUpdatedRedText" title="@item.LastUpdatedMessage"></i></span>
                        }
                        @if (Model.IsContributor)
                        {
                            <a href="@Url.Action("UpdateRow", "Home", new { user = item.User, owner = item.Owner, repo = item.Repo, isContributor = Model.IsContributor })" class="lastUpdatedText">Update metrics</a>
                            @* <a href="@Url.Action("Config", "Home", new { user = item.User, owner = item.Owner, repo = item.Repo, isContributor = Model.IsContributor })" class="lastUpdatedText">Update configuration</a> *@
                        }
                    </div>
                </div>
                <div class="col-md-2 divBorder">
                    <strong style="font-size:14px;">.NET verisons found:</strong><br />
                    @if (item.DotNetFrameworks.Count == 0)
                    {
                        <span class="badge bg-secondary">None found</span>
                    }
                    else
                    {
                        foreach (Framework framework in item.DotNetFrameworks)
                        {
                            <span class="badge @framework.Color">@framework.Name</span>

                            <span style="font-size:0.75em;font-weight:700;"> x @framework.Count</span>
                            <br />
                        }
                    }
                </div>
                <div class="col-md-2 divBorder">
                    @if (item.AzureDeployment != null)
                    {
                        <strong style="font-size:14px;">Azure status:</strong>

                        <br />
                        <div style="font-size:12px;">
                            App registrations: @item.AzureDeployment.AppRegistrations.Count<br />
                            <ul>
                                @for (int i = 0; i < item.AzureDeployment.AppRegistrations.Count; i++)
                                {
                                    <li>
                                        @if (item.AzureDeployment.AppRegistrations[i].ExpirationDate < DateTime.Now)
                                        {
                                            <span style="color:red">Service principal #@(i + 1)</span>
                                            <i class="bi bi-info-circle" title='@item.AzureDeployment.AppRegistrations[i].Name, @item.AzureDeployment.AppRegistrations[i].ExpirationDateString'></i>
                                        }
                                        else
                                        {
                                            <span>Service principal #@(i + 1)</span>
                                            <i class="bi bi-info-circle" title='@item.AzureDeployment.AppRegistrations[i].Name, @item.AzureDeployment.AppRegistrations[i].ExpirationDateString'></i>
                                        }
                                    </li>
                                }
                                @* <li>[Secret 1] status: Current (6 months)</li>
                        <li>[Se cret 2] status: <span style="color:red">Expiring soon (2 days)</span></li>*@
                            </ul>
                            @*
                    Deployed URL: https://repogovernance-prod-eu-web.azurewebsites.net/<br />
                    Resource group: repogovernance-prod-eu<br />
                    Failed requests (last 30 days): 797<br/>
                    Server response time (avg) (last 30 days): 1.89s<br />
                    Server requests (last 30 days): *@
                        </div>
                    }
                </div>
                <div class="col-md-3 divBorder">
                    @if (item.DORASummary != null)
                    {
                        string doraTitle = "DORA metrics (last 30 days)";
                        if (item.DORASummary != null && item.DORASummary.NumberOfDays > 0)
                        {
                            doraTitle = $"DORA metrics (last {@item.DORASummary.NumberOfDays} days)";
                        }
                        <strong style="font-size:14px;">@doraTitle</strong>
                        @if (item.DORASummary != null && string.IsNullOrEmpty(item.DORASummary.LastUpdatedMessage) == false)
                        {
                            <i class="bi bi-info-circle" title="@item.DORASummary.LastUpdatedMessage"></i>
                        }
                        <br />
                        @if (item?.DORASummary?.DeploymentFrequency > 0)
                        {
                            <img src="@item?.DORASummary?.DeploymentFrequencyBadgeWithMetricURL" alt="Deployment frequency badge" />
                        }
                        else
                        {
                            <img src="@item?.DORASummary?.DeploymentFrequencyBadgeURL" alt="Deployment frequency badge" />
                        }
                        <br />
                        @if (item?.DORASummary?.LeadTimeForChanges > 0)
                        {
                            <img src="@item?.DORASummary?.LeadTimeForChangesBadgeWithMetricURL" alt="Lead time for changes badge" />
                        }
                        else
                        {
                            <img src="@item?.DORASummary?.LeadTimeForChangesBadgeURL" alt="Lead time for changes badge" />
                        }
                        <br />
                        @if (item?.DORASummary?.MeanTimeToRestore > 0)
                        {
                            <img src="@item?.DORASummary?.MeanTimeToRestoreBadgeWithMetricURL" alt="Mean time to restore badge" />
                        }
                        else
                        {
                            <img src="@item?.DORASummary?.MeanTimeToRestoreBadgeURL" alt="Mean time to restore badge" />
                        }
                        <br />
                        @if (item?.DORASummary?.ChangeFailureRate >= 0) //Note that change failure rate is -1 instead of 0 when there is no value
                        {
                            <img src="@item?.DORASummary?.ChangeFailureRateBadgeWithMetricURL" alt="Change failure rate badge" />
                        }
                        else
                        {
                            <img src="@item?.DORASummary?.ChangeFailureRateBadgeURL" alt="Change failure rate badge" />
                        }
                    }
                </div>
            </div>
        }
    </div>
    <div>
        @if (Model.IsContributor)
        {
            <a href="@Url.Action("UpdateAll", "Home", new { isContributor = Model.IsContributor })" class="lastUpdatedText">Update all. Warning- takes a ~minute</a>

            <br />
            <a href="@Url.Action("ApprovePRsForAllRepos", "Home", new { isContributor = Model.IsContributor })" class="lastUpdatedText">Approve all open PRs. Warning- takes a ~minute</a>
        }
    </div>
</div>
